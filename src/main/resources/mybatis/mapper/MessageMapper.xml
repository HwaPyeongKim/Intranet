<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.intranet.dao.IMessageDao">

    <insert id="sendMessage" parameterType="com.example.intranet.dto.MessageDto">
        INSERT INTO message (frommidx, tomidx, content, readyn, todeleteyn, fromdeleteyn, writedate)
        VALUES (#{frommidx}, #{tomidx}, #{content}, 'N', 'N', 'N', NOW())
    </insert>

    <select id="getMessageByUser" parameterType="int" resultType="com.example.intranet.dto.MessageDto">
        SELECT *, ROW_NUMBER() OVER (ORDER BY writedate DESC) AS loopnum
        FROM msg_view
        WHERE (frommidx = #{userId} OR tomidx = #{userId}) AND deleteyn = 'N'
        ORDER BY writedate DESC
    </select>

    <select id="getMessageById" parameterType="int" resultType="com.example.intranet.dto.MessageDto">
        SELECT * FROM msg_view WHERE msidx = #{msidx}
    </select>

    <update id="updateReadyn" parameterType="int">
        UPDATE message SET readyn = 'Y', readdate = NOW() WHERE msidx = #{msidx}
    </update>

<!--    <select id="getMessageReceive" resultType="com.example.intranet.dto.MessageDto">-->
<!--        select-->
<!--        ms.*-->
<!--        , mt.name as toname, mt.userid as touserid-->
<!--        , mf.name as fromname, mf.userid as fromuserid-->
<!--        from message ms-->
<!--        left join member mt on mt.midx = ms.tomidx-->
<!--        left join member mf on mf.midx = ms.frommidx-->
<!--        where tomidx = #{midx} and ms.deleteyn = 'n'-->
<!--        order by ms.writedate desc-->


<!--    </select>-->

<!--    <select id="getMessageSent" resultType="com.example.intranet.dto.MessageDto">-->
<!--        select-->
<!--            ms.*-->
<!--             , mt.name as toname, mt.userid as touserid-->
<!--             , mf.name as fromname, mf.userid as fromuserid-->
<!--        from message ms-->
<!--                 left join member mt on mt.midx = ms.tomidx-->
<!--                 left join member mf on mf.midx = ms.frommidx-->
<!--        where frommidx = #{midx} and ms.deleteyn = 'n'-->
<!--        order by ms.writedate desc-->
<!--    </select>-->


    <select id="getMessageReceiveView" parameterType="int" resultType="com.example.intranet.dto.MessageDto">
        SELECT m.msidx, m.frommidx, m.tomidx, m.content, m.writedate, m.readyn, m.readdate,
               sender.name AS fromName, receiver.name AS toName, sender.position as fromposition, receiver.position as toposition
        FROM message m
                 JOIN member sender ON m.frommidx = sender.midx
                 JOIN member receiver ON m.tomidx = receiver.midx
        WHERE m.msidx = #{msidx}
    </select>


    <select id="getMessageSentView" parameterType="int" resultType="com.example.intranet.dto.MessageDto">
        SELECT m.msidx, m.frommidx, m.tomidx, m.content, m.writedate, m.readyn, m.readdate,
               sender.name AS fromName, receiver.name AS toName, sender.position as fromposition, receiver.position as toposition
        FROM message m
                 JOIN member sender ON m.frommidx = sender.midx
                 JOIN member receiver ON m.tomidx = receiver.midx
        WHERE m.msidx = #{msidx}
    </select>

    <update id="todeleteMessage" parameterType="int">
        UPDATE message SET todeleteyn = 'Y' WHERE msidx = #{msidx}
    </update>

    <update id="fromdeleteMessage" parameterType="int">
        UPDATE message SET fromdeleteyn = 'Y' WHERE msidx = #{msidx}
    </update>

    <update id="todeleteMessages" parameterType="list">
        UPDATE message SET todeleteyn = 'Y'
        WHERE msidx IN
        <foreach collection="msidxList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="fromdeleteMessages" parameterType="list">
        UPDATE message SET fromdeleteyn = 'Y'
        WHERE msidx IN
        <foreach collection="msidxList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectReceive" resultType="com.example.intranet.dto.MessageDto">
        select ms.*, mf.name as fromname, mf.position as fromposition
        from message ms
        left join member mt on mt.midx = ms.tomidx
        left join member mf on mf.midx = ms.frommidx
        <where>
            ms.todeleteyn = 'N'
            and ms.tomidx = #{midx}
            <if test="type == 'titleContent'">
                and ms.content like concat('%', #{key}, '%')
            </if>
            <if test="type == 'name'">
                and mf.name like concat('%', #{key}, '%')
            </if>
        </where>

        <choose>
            <when test="sort == 'desc'">
                order by ms.writedate desc
            </when>
            <when test="sort == 'asc'">
                order by ms.writedate asc
            </when>
        </choose>
    </select>

    <select id="selectSent" resultType="com.example.intranet.dto.MessageDto">
        select ms.*, mt.name as toname, mt.position as toposition
        from message ms
        left join member mt on mt.midx = ms.tomidx
        left join member mf on mf.midx = ms.frommidx
        <where>
            ms.fromdeleteyn = 'N'
            and ms.frommidx = #{midx}
            <if test="type == 'titleContent'">
                and ms.content like concat('%', #{key}, '%')
            </if>
            <if test="type == 'name'">
                and mt.name like concat('%', #{key}, '%')
            </if>
        </where>

        <choose>
            <when test="sort == 'desc'">
                order by ms.writedate desc
            </when>
            <when test="sort == 'asc'">
                order by ms.writedate asc
            </when>
        </choose>
    </select>



</mapper>
