<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.intranet.dao.calendar.ICalendarDao">

    <!--
        원본 https://greed-yb.tistory.com/274
        DB 이름을 기존의 schedule로 할지 원본의 calendar로 할지 선택필요
        공통 수정사항
        파일명 mapper.xml -> CalendarDao.xml
        패키지명 변경
        CALENDAR_NO 에 AS calendarNo 추가
        ALL_DAY 에 AS allDay 추가
    -->


    <!-- 일정 조회하기-->
    <!--
        수정사항
        TO_CHAR()를 DATE_FORMAT()로 변경
        where에 midx 추가
        카테고리기능 추가, 카테고리별 수정가능여부, 색상 추가
        부서일정의 경우 해당 부서 직원만 부서일정이 보이게?
    -->
    <select id="calendarList" resultType="com.example.intranet.dto.calendar.CalendarDto" parameterType="com.example.intranet.dto.MemberDto">
        SELECT CALENDAR_NO                                      AS calendarNo,
               CALENDAR_TITLE                                   AS TITLE,
               DATE_FORMAT(CALENDAR_START, '%Y-%m-%d %H:%i:%s') AS START1,
               DATE_FORMAT(CALENDAR_END, '%Y-%m-%d %H:%i:%s') AS END,
            ALL_DAY AS allDay,
            category,
            editable,
            eventColor
        FROM CALENDAR
        WHERE (category=1 AND midx = #{midx}) OR (category=2 AND tidx = #{team}) OR category=3  -- 유저의 개인일정, 부서일정, 회사전체일정을 가져옵니다
    </select>

    <!-- 일정 저장하기 -->
    <!-- 저장하고 생성된 no(key) 값을 return 시킨다 -->
    <!--
        수정사항
        TO_DATE()를 DATE_FORMAT()로 변경
        Auto Increment 추가로 CALENDAR_NO를 인서트 하는 부분을 지움
        유저의 midx를 같이 insert
    -->
    <insert id="calendarSave" parameterType="com.example.intranet.dto.calendar.CalendarDto" useGeneratedKeys="true"
            keyColumn="CALENDAR_NO" keyProperty="calendarNo">
        INSERT INTO CALENDAR(CALENDAR_TITLE,    -- 제목
                             CALENDAR_START,    -- 시작일
                             CALENDAR_END,      -- 종료일
                             ALL_DAY,           -- 하루종일 true or false
                             MIDX,              -- 일정 작성자
                             category,          -- 개인 or 부서 or 회사 일정
                             editable,          -- 일정 수정 가능여부
                             eventColor,        -- 일정 카테고리에 따른 일정 색깔
                             widx,              -- 업무와 연결되는 경우 업무 idx 입력
                             tidx,              -- 부서일정인 경우 부서 idx 입력
                             ridx               -- 휴가인 경우 결재서류 idx 입력
        )
        values (#{title},
                DATE_FORMAT(#{start1}, '%Y-%m-%d %H:%i:%s'),
                DATE_FORMAT(#{end}, '%Y-%m-%d %H:%i:%s'),
                #{allDay},
                #{midx},
                #{category},
                #{editable},
                #{eventColor},
                #{widx},
                #{tidx},
                #{ridx})
    </insert>

    <!-- 일정 삭제하기 -->
    <delete id="calendarDelete">
        DELETE
        FROM CALENDAR
        WHERE CALENDAR_NO = #{no}
    </delete>


    <!-- 일정 수정하기 -->
    <!--
        수정사항
        TO_DATE()를 DATE_FORMAT()로 변경
    -->
    <update id="eventUpdate" parameterType="com.example.intranet.dto.calendar.CalendarDto">
        UPDATE CALENDAR
        SET CALENDAR_TITLE = #{title},
            CALENDAR_START = DATE_FORMAT(#{start1}, '%Y-%m-%d %H:%i:%s'),
            CALENDAR_END   = DATE_FORMAT(#{end}, '%Y-%m-%d %H:%i:%s'),
            ALL_DAY        = #{allDay}
        WHERE CALENDAR_NO = #{calendarNo}
    </update>

    <!--  업무와 연결된 일정 가져오기  -->
    <select id="getEventForWork" resultType="com.example.intranet.dto.calendar.CalendarDto">
        SELECT CALENDAR_NO                                      AS calendarNo,
               CALENDAR_TITLE                                   AS TITLE,
               DATE_FORMAT(CALENDAR_START, '%Y-%m-%d %H:%i:%s') AS START1,
               DATE_FORMAT(CALENDAR_END, '%Y-%m-%d %H:%i:%s') AS END,
            ALL_DAY AS allDay,
            category,
            editable,
            eventColor
        from calendar where widx = #{widx}
    </select>

    <!--  자동생성 일정중 오래된것 자동삭제하기  -->
    <delete id="deleteOldEvent">
        delete from calendar where CALENDAR_END &lt; now() AND (ridx>=1 OR widx>=1 )
        -- ridx나 widx가 있는 일정중 일정 종료일이 현재시간 이전인 것들을 삭제
        -- &lt; : 부등호 왼쪽이 작다 기호, 에러걸려서 바꿈
    </delete>
</mapper>